// <auto-generated />
using System;
using HotelReservationManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelReservationManager.Migrations
{
    [DbContext(typeof(HotelReservationContext))]
    partial class HotelReservationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelReservationManager.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAdult")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alex.atanasov@example.com",
                            FirstName = "Alexander",
                            IsAdult = true,
                            LastName = "Atanasov",
                            PhoneNumber = "0876543210"
                        },
                        new
                        {
                            Id = 2,
                            Email = "stefka.dimitrova@example.com",
                            FirstName = "Stefka",
                            IsAdult = true,
                            LastName = "Dimitrova",
                            PhoneNumber = "0896543210"
                        });
                });

            modelBuilder.Entity("HotelReservationManager.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAllInclusive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBreakfastIncluded")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountDue = 100m,
                            CheckInDate = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAllInclusive = false,
                            IsBreakfastIncluded = true,
                            RoomId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AmountDue = 480m,
                            CheckInDate = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAllInclusive = true,
                            IsBreakfastIncluded = true,
                            RoomId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("HotelReservationManager.Models.ReservationClient", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("ReservationClients");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            ClientId = 1
                        },
                        new
                        {
                            ReservationId = 2,
                            ClientId = 2
                        });
                });

            modelBuilder.Entity("HotelReservationManager.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("PriceForAdult")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceForChild")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 2,
                            IsAvailable = true,
                            PriceForAdult = 50m,
                            PriceForChild = 30m,
                            RoomNumber = 101,
                            RoomType = "Double Room"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 4,
                            IsAvailable = true,
                            PriceForAdult = 120m,
                            PriceForChild = 60m,
                            RoomNumber = 102,
                            RoomType = "Apartment"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 2,
                            IsAvailable = true,
                            PriceForAdult = 75m,
                            PriceForChild = 40m,
                            RoomNumber = 103,
                            RoomType = "Room with Double Bed"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 1,
                            IsAvailable = true,
                            PriceForAdult = 200m,
                            PriceForChild = 100m,
                            RoomNumber = 104,
                            RoomType = "Penthouse"
                        });
                });

            modelBuilder.Entity("HotelReservationManager.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfHire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DateOfRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("Egn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfHire = new DateTime(2025, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "1234567890",
                            Email = "ivan.ivanov@example.com",
                            FatherName = "Petkov",
                            FirstName = "Ivan",
                            IsActive = true,
                            LastName = "Ivanov",
                            Password = "admin123",
                            PhoneNumber = "0871234567",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            DateOfHire = new DateTime(2025, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Egn = "0987654321",
                            Email = "maria.petrova@example.com",
                            FatherName = "Ivanova",
                            FirstName = "Maria",
                            IsActive = true,
                            LastName = "Petrova",
                            Password = "emp1234",
                            PhoneNumber = "0898765432",
                            Username = "employee"
                        });
                });

            modelBuilder.Entity("HotelReservationManager.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("Role")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(1);

                    b.HasKey("UserId", "Role");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("HotelReservationManager.Models.Reservation", b =>
                {
                    b.HasOne("HotelReservationManager.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservationManager.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelReservationManager.Models.ReservationClient", b =>
                {
                    b.HasOne("HotelReservationManager.Models.Client", "Client")
                        .WithMany("ReservationClients")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservationManager.Models.Reservation", "Reservation")
                        .WithMany("ReservationClients")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("HotelReservationManager.Models.UserRole", b =>
                {
                    b.HasOne("HotelReservationManager.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelReservationManager.Models.Client", b =>
                {
                    b.Navigation("ReservationClients");
                });

            modelBuilder.Entity("HotelReservationManager.Models.Reservation", b =>
                {
                    b.Navigation("ReservationClients");
                });
#pragma warning restore 612, 618
        }
    }
}
